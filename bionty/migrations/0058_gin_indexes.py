# Generated by Django 5.2 on 2025-07-27 14:13

import django.contrib.postgres.indexes
import django.db.models.functions.comparison
import django.db.models.functions.text
import lamindb.base.fields
from django.conf import settings as django_settings
from django.db import migrations, models

import bionty.uids


class Migration(migrations.Migration):
    dependencies = [
        ("bionty", "0057_alter_cellline_description_alter_cellline_synonyms_and_more"),
        ("lamindb", "0118_gin_indexes"),
    ]

    operations = [
        # Gene model changes
        migrations.AlterField(
            model_name="gene",
            name="description",
            field=lamindb.base.fields.TextField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name="gene",
            name="ensembl_gene_id",
            field=lamindb.base.fields.CharField(
                blank=True, default=None, max_length=64, null=True, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="gene",
            name="symbol",
            field=lamindb.base.fields.CharField(
                blank=True, default=None, max_length=64, null=True
            ),
        ),
        migrations.AlterField(
            model_name="gene",
            name="synonyms",
            field=lamindb.base.fields.TextField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name="gene",
            name="uid",
            field=lamindb.base.fields.CharField(
                blank=True, default=bionty.uids.gene, max_length=12, unique=True
            ),
        ),
        # Organism model changes
        migrations.AlterField(
            model_name="organism",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="organism",
            name="name",
            field=lamindb.base.fields.CharField(
                default=None, max_length=64, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="organism",
            name="ontology_id",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="organism",
            name="scientific_name",
            field=lamindb.base.fields.CharField(
                max_length=64, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="organism",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="organism",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # Protein model changes
        migrations.AlterField(
            model_name="protein",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.protein, max_length=12, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="protein",
            name="name",
            field=lamindb.base.fields.CharField(
                max_length=256, null=True, default=None
            ),
        ),
        migrations.AlterField(
            model_name="protein",
            name="uniprotkb_id",
            field=lamindb.base.fields.CharField(
                max_length=10, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="protein",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="protein",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="protein",
            name="gene_symbol",
            field=lamindb.base.fields.CharField(
                max_length=256, null=True, default=None
            ),
        ),
        # CellMarker model changes
        migrations.AlterField(
            model_name="cellmarker",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.cellmarker, max_length=12, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="cellmarker",
            name="name",
            field=lamindb.base.fields.CharField(max_length=64),
        ),
        migrations.AlterField(
            model_name="cellmarker",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="cellmarker",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="cellmarker",
            name="gene_symbol",
            field=lamindb.base.fields.CharField(max_length=64, null=True, default=None),
        ),
        # Tissue model changes
        migrations.AlterField(
            model_name="tissue",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="tissue",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="tissue",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="tissue",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="tissue",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="tissue",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # CellType model changes
        migrations.AlterField(
            model_name="celltype",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="celltype",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="celltype",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="celltype",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="celltype",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="celltype",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # Disease model changes
        migrations.AlterField(
            model_name="disease",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="disease",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="disease",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="disease",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="disease",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="disease",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # CellLine model changes
        migrations.AlterField(
            model_name="cellline",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="cellline",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="cellline",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="cellline",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="cellline",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="cellline",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # Phenotype model changes
        migrations.AlterField(
            model_name="phenotype",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="phenotype",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="phenotype",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="phenotype",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="phenotype",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="phenotype",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # Pathway model changes
        migrations.AlterField(
            model_name="pathway",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="pathway",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="pathway",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="pathway",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="pathway",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="pathway",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # ExperimentalFactor model changes
        migrations.AlterField(
            model_name="experimentalfactor",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="experimentalfactor",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="experimentalfactor",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="experimentalfactor",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="experimentalfactor",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="experimentalfactor",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="experimentalfactor",
            name="molecule",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="experimentalfactor",
            name="instrument",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="experimentalfactor",
            name="measurement",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # DevelopmentalStage model changes
        migrations.AlterField(
            model_name="developmentalstage",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="developmentalstage",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="developmentalstage",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="developmentalstage",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="developmentalstage",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="developmentalstage",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        # Ethnicity model changes
        migrations.AlterField(
            model_name="ethnicity",
            name="uid",
            field=lamindb.base.fields.CharField(
                default=bionty.uids.ontology, max_length=8, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="ethnicity",
            name="name",
            field=lamindb.base.fields.CharField(max_length=256),
        ),
        migrations.AlterField(
            model_name="ethnicity",
            name="ontology_id",
            field=lamindb.base.fields.CharField(max_length=32, null=True, default=None),
        ),
        migrations.AlterField(
            model_name="ethnicity",
            name="abbr",
            field=lamindb.base.fields.CharField(
                max_length=32, null=True, default=None, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="ethnicity",
            name="synonyms",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
        migrations.AlterField(
            model_name="ethnicity",
            name="description",
            field=lamindb.base.fields.TextField(null=True, default=None),
        ),
    ]


POSTGRES_OPERATIONS = [
    # Organism indexes
    migrations.AddIndex(
        model_name="organism",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_organism_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_organism_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_organism_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("scientific_name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_organism_scientific_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_organism_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_organism_description_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_gene_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("symbol"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_gene_symbol_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ensembl_gene_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_gene_ensembl_gene_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_gene_description_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_gene_synonyms_trgm_idx",
        ),
    ),
    # Protein indexes
    migrations.AddIndex(
        model_name="protein",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_protein_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_protein_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uniprotkb_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_protein_uniprotkb_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_protein_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_protein_description_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("gene_symbol"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_protein_gene_symbol_trgm_idx",
        ),
    ),
    # CellMarker indexes
    migrations.AddIndex(
        model_name="cellmarker",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellmarker_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellmarker_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellmarker_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellmarker_description_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("gene_symbol"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellmarker_gene_symbol_trgm_idx",
        ),
    ),
    # Tissue indexes
    migrations.AddIndex(
        model_name="tissue",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_tissue_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_tissue_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_tissue_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_tissue_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_tissue_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_tissue_description_trgm_idx",
        ),
    ),
    # CellType indexes
    migrations.AddIndex(
        model_name="celltype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_celltype_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_celltype_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_celltype_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_celltype_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_celltype_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_celltype_description_trgm_idx",
        ),
    ),
    # Disease indexes
    migrations.AddIndex(
        model_name="disease",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_disease_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_disease_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_disease_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_disease_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_disease_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_disease_description_trgm_idx",
        ),
    ),
    # CellLine indexes
    migrations.AddIndex(
        model_name="cellline",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellline_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellline_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellline_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellline_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellline_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_cellline_description_trgm_idx",
        ),
    ),
    # Phenotype indexes
    migrations.AddIndex(
        model_name="phenotype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_phenotype_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_phenotype_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_phenotype_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_phenotype_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_phenotype_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_phenotype_description_trgm_idx",
        ),
    ),
    # Pathway indexes
    migrations.AddIndex(
        model_name="pathway",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_pathway_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_pathway_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_pathway_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_pathway_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_pathway_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_pathway_description_trgm_idx",
        ),
    ),
    # ExperimentalFactor indexes
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_description_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("molecule"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_molecule_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("instrument"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_instrument_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("measurement"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_experimentalfactor_measurement_trgm_idx",
        ),
    ),
    # DevelopmentalStage indexes
    migrations.AddIndex(
        model_name="developmentalstage",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_developmentalstage_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_developmentalstage_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_developmentalstage_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_developmentalstage_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_developmentalstage_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_developmentalstage_description_trgm_idx",
        ),
    ),
    # Ethnicity indexes
    migrations.AddIndex(
        model_name="ethnicity",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_ethnicity_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("name"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_ethnicity_name_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ontology_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_ethnicity_ontology_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("abbr"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_ethnicity_abbr_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_ethnicity_synonyms_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="bionty_ethnicity_description_trgm_idx",
        ),
    ),
]

SQLITE_OPERATIONS = [
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(fields=["uid"], name="bionty_gene_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(fields=["symbol"], name="bionty_gene_symbol_std_idx"),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(
            fields=["ensembl_gene_id"], name="bionty_gene_ensembl_gene_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(
            fields=["description"], name="bionty_gene_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(fields=["synonyms"], name="bionty_gene_synonyms_std_idx"),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=models.Index(fields=["uid"], name="bionty_cellline_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=models.Index(fields=["name"], name="bionty_cellline_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=models.Index(
            fields=["ontology_id"], name="bionty_cellline_ontology_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=models.Index(fields=["abbr"], name="bionty_cellline_abbr_std_idx"),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=models.Index(
            fields=["synonyms"], name="bionty_cellline_synonyms_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="cellline",
        index=models.Index(
            fields=["description"], name="bionty_cellline_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=models.Index(fields=["uid"], name="bionty_cellmarker_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=models.Index(fields=["name"], name="bionty_cellmarker_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=models.Index(
            fields=["synonyms"], name="bionty_cellmarker_synonyms_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=models.Index(
            fields=["description"], name="bionty_cellmarker_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="cellmarker",
        index=models.Index(
            fields=["gene_symbol"], name="bionty_cellmarker_gene_symbol_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=models.Index(fields=["uid"], name="bionty_celltype_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=models.Index(fields=["name"], name="bionty_celltype_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=models.Index(
            fields=["ontology_id"], name="bionty_celltype_ontology_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=models.Index(fields=["abbr"], name="bionty_celltype_abbr_std_idx"),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=models.Index(
            fields=["synonyms"], name="bionty_celltype_synonyms_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="celltype",
        index=models.Index(
            fields=["description"], name="bionty_celltype_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=models.Index(
            fields=["uid"], name="bionty_developmentalstage_uid_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=models.Index(
            fields=["name"], name="bionty_developmentalstage_name_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=models.Index(
            fields=["ontology_id"],
            name="bionty_developmentalstage_ontology_id_std_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=models.Index(
            fields=["abbr"], name="bionty_developmentalstage_abbr_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=models.Index(
            fields=["synonyms"], name="bionty_developmentalstage_synonyms_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="developmentalstage",
        index=models.Index(
            fields=["description"],
            name="bionty_developmentalstage_description_std_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=models.Index(fields=["uid"], name="bionty_disease_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=models.Index(fields=["name"], name="bionty_disease_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=models.Index(
            fields=["ontology_id"], name="bionty_disease_ontology_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=models.Index(fields=["abbr"], name="bionty_disease_abbr_std_idx"),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=models.Index(fields=["synonyms"], name="bionty_disease_synonyms_std_idx"),
    ),
    migrations.AddIndex(
        model_name="disease",
        index=models.Index(
            fields=["description"], name="bionty_disease_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=models.Index(fields=["uid"], name="bionty_ethnicity_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=models.Index(fields=["name"], name="bionty_ethnicity_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=models.Index(
            fields=["ontology_id"], name="bionty_ethnicity_ontology_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=models.Index(fields=["abbr"], name="bionty_ethnicity_abbr_std_idx"),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=models.Index(
            fields=["synonyms"], name="bionty_ethnicity_synonyms_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="ethnicity",
        index=models.Index(
            fields=["description"], name="bionty_ethnicity_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["uid"], name="bionty_experimentalfactor_uid_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["name"], name="bionty_experimentalfactor_name_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["ontology_id"],
            name="bionty_experimentalfactor_ontology_id_std_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["abbr"], name="bionty_experimentalfactor_abbr_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["synonyms"], name="bionty_experimentalfactor_synonyms_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["description"],
            name="bionty_experimentalfactor_description_std_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["molecule"], name="bionty_experimentalfactor_molecule_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["instrument"],
            name="bionty_experimentalfactor_instrument_std_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="experimentalfactor",
        index=models.Index(
            fields=["measurement"],
            name="bionty_experimentalfactor_measurement_std_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=models.Index(fields=["uid"], name="bionty_organism_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=models.Index(fields=["name"], name="bionty_organism_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=models.Index(
            fields=["ontology_id"], name="bionty_organism_ontology_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=models.Index(
            fields=["scientific_name"],
            name="bionty_organism_scientific_name_std_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=models.Index(
            fields=["synonyms"], name="bionty_organism_synonyms_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="organism",
        index=models.Index(
            fields=["description"], name="bionty_organism_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=models.Index(fields=["uid"], name="bionty_pathway_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=models.Index(fields=["name"], name="bionty_pathway_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=models.Index(
            fields=["ontology_id"], name="bionty_pathway_ontology_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=models.Index(fields=["abbr"], name="bionty_pathway_abbr_std_idx"),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=models.Index(fields=["synonyms"], name="bionty_pathway_synonyms_std_idx"),
    ),
    migrations.AddIndex(
        model_name="pathway",
        index=models.Index(
            fields=["description"], name="bionty_pathway_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=models.Index(fields=["uid"], name="bionty_phenotype_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=models.Index(fields=["name"], name="bionty_phenotype_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=models.Index(
            fields=["ontology_id"], name="bionty_phenotype_ontology_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=models.Index(fields=["abbr"], name="bionty_phenotype_abbr_std_idx"),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=models.Index(
            fields=["synonyms"], name="bionty_phenotype_synonyms_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="phenotype",
        index=models.Index(
            fields=["description"], name="bionty_phenotype_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=models.Index(fields=["uid"], name="bionty_protein_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=models.Index(fields=["name"], name="bionty_protein_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=models.Index(
            fields=["uniprotkb_id"], name="bionty_protein_uniprotkb_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=models.Index(fields=["synonyms"], name="bionty_protein_synonyms_std_idx"),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=models.Index(
            fields=["description"], name="bionty_protein_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="protein",
        index=models.Index(
            fields=["gene_symbol"], name="bionty_protein_gene_symbol_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=models.Index(fields=["uid"], name="bionty_tissue_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=models.Index(fields=["name"], name="bionty_tissue_name_std_idx"),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=models.Index(
            fields=["ontology_id"], name="bionty_tissue_ontology_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=models.Index(fields=["abbr"], name="bionty_tissue_abbr_std_idx"),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=models.Index(fields=["synonyms"], name="bionty_tissue_synonyms_std_idx"),
    ),
    migrations.AddIndex(
        model_name="tissue",
        index=models.Index(
            fields=["description"], name="bionty_tissue_description_std_idx"
        ),
    ),
]


db_engine = django_settings.DATABASES["default"]["ENGINE"]
if "postgresql" in db_engine:
    Migration.operations += POSTGRES_OPERATIONS
else:
    Migration.operations += SQLITE_OPERATIONS
