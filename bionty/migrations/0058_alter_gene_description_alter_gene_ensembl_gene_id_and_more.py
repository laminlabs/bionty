# Generated by Django 5.2 on 2025-07-27 14:13

import django.contrib.postgres.indexes
import django.db.models.functions.comparison
import django.db.models.functions.text
import lamindb.base.fields
from django.conf import settings as django_settings
from django.db import migrations, models

import bionty.uids


class Migration(migrations.Migration):
    dependencies = [
        ("bionty", "0057_squashed"),
        ("lamindb", "0117_squashed"),
    ]

    operations = [
        migrations.AlterField(
            model_name="gene",
            name="description",
            field=lamindb.base.fields.TextField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name="gene",
            name="ensembl_gene_id",
            field=lamindb.base.fields.CharField(
                blank=True, default=None, max_length=64, null=True, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="gene",
            name="symbol",
            field=lamindb.base.fields.CharField(
                blank=True, default=None, max_length=64, null=True
            ),
        ),
        migrations.AlterField(
            model_name="gene",
            name="synonyms",
            field=lamindb.base.fields.TextField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name="gene",
            name="uid",
            field=lamindb.base.fields.CharField(
                blank=True, default=bionty.uids.gene, max_length=12, unique=True
            ),
        ),
    ]


POSTGRES_OPERATIONS = [
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("uid"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="gene_uid_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("symbol"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="gene_symbol_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("ensembl_gene_id"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="gene_ensembl_gene_id_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("description"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="gene_description_trgm_idx",
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=django.contrib.postgres.indexes.GinIndex(
            django.contrib.postgres.indexes.OpClass(
                django.db.models.functions.text.Lower(
                    django.db.models.functions.comparison.Coalesce(
                        models.F("synonyms"), models.Value("")
                    )
                ),
                name="gin_trgm_ops",
            ),
            name="gene_synonyms_trgm_idx",
        ),
    ),
]


SQLITE_OPERATIONS = [
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(fields=["uid"], name="bionty_gene_uid_std_idx"),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(fields=["symbol"], name="bionty_gene_symbol_std_idx"),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(
            fields=["ensembl_gene_id"], name="bionty_gene_ensembl_gene_id_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(
            fields=["description"], name="bionty_gene_description_std_idx"
        ),
    ),
    migrations.AddIndex(
        model_name="gene",
        index=models.Index(fields=["synonyms"], name="bionty_gene_synonyms_std_idx"),
    ),
]


db_engine = django_settings.DATABASES["default"]["ENGINE"]
if "postgresql" in db_engine:
    Migration.operations += POSTGRES_OPERATIONS
else:
    Migration.operations += SQLITE_OPERATIONS
